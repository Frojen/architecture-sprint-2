name: sharding-repl-cache
services:

  configSrv:
    container_name: configSrv
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - configSrv_data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1a:
    container_name: shard1a
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1a_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1b:
    container_name: shard1b
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - shard1b_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1c:
    container_name: shard1c
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - shard1c_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


  shard2a:
    container_name: shard2a
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2a_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2b:
    container_name: shard2b
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27023:27023"
    volumes:
      - shard2b_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2c:
    container_name: shard2c
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27024:27024"
    volumes:
      - shard2c_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [  "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  router:
    container_name: router
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
    restart: always
    ports:
      - "27020:27020"
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command:
      [
        "redis-server",
        "/usr/local/etc/redis/redis.conf"
      ]
   
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"


volumes:
  configSrv_data:
  shard1a_data:
  shard1b_data:
  shard1c_data:
  shard2a_data:
  shard2b_data:
  shard2c_data:
  redis_data:
